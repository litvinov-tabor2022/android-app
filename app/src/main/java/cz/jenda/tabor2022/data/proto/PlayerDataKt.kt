//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: portal.proto

package cz.jenda.tabor2022.data.proto;

@kotlin.jvm.JvmName("-initializeplayerData")
public inline fun playerData(block: PlayerDataKt.Dsl.() -> kotlin.Unit): cz.jenda.tabor2022.data.proto.Portal.PlayerData =
  PlayerDataKt.Dsl._create(cz.jenda.tabor2022.data.proto.Portal.PlayerData.newBuilder()).apply { block() }._build()
public object PlayerDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cz.jenda.tabor2022.data.proto.Portal.PlayerData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cz.jenda.tabor2022.data.proto.Portal.PlayerData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cz.jenda.tabor2022.data.proto.Portal.PlayerData = _builder.build()

    /**
     * <code>required string secret = 1;</code>
     */
    public var secret: kotlin.String
      @JvmName("getSecret")
      get() = _builder.getSecret()
      @JvmName("setSecret")
      set(value) {
        _builder.setSecret(value)
      }
    /**
     * <code>required string secret = 1;</code>
     */
    public fun clearSecret() {
      _builder.clearSecret()
    }
    /**
     * <code>required string secret = 1;</code>
     * @return Whether the secret field is set.
     */
    public fun hasSecret(): kotlin.Boolean {
      return _builder.hasSecret()
    }

    /**
     * <code>required uint32 user_id = 2;</code>
     */
    public var userId: kotlin.Int
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>required uint32 user_id = 2;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>required uint32 user_id = 2;</code>
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * <code>required uint32 strength = 3;</code>
     */
    public var strength: kotlin.Int
      @JvmName("getStrength")
      get() = _builder.getStrength()
      @JvmName("setStrength")
      set(value) {
        _builder.setStrength(value)
      }
    /**
     * <code>required uint32 strength = 3;</code>
     */
    public fun clearStrength() {
      _builder.clearStrength()
    }
    /**
     * <code>required uint32 strength = 3;</code>
     * @return Whether the strength field is set.
     */
    public fun hasStrength(): kotlin.Boolean {
      return _builder.hasStrength()
    }

    /**
     * <code>required uint32 magic = 4;</code>
     */
    public var magic: kotlin.Int
      @JvmName("getMagic")
      get() = _builder.getMagic()
      @JvmName("setMagic")
      set(value) {
        _builder.setMagic(value)
      }
    /**
     * <code>required uint32 magic = 4;</code>
     */
    public fun clearMagic() {
      _builder.clearMagic()
    }
    /**
     * <code>required uint32 magic = 4;</code>
     * @return Whether the magic field is set.
     */
    public fun hasMagic(): kotlin.Boolean {
      return _builder.hasMagic()
    }

    /**
     * <code>required uint32 dexterity = 5;</code>
     */
    public var dexterity: kotlin.Int
      @JvmName("getDexterity")
      get() = _builder.getDexterity()
      @JvmName("setDexterity")
      set(value) {
        _builder.setDexterity(value)
      }
    /**
     * <code>required uint32 dexterity = 5;</code>
     */
    public fun clearDexterity() {
      _builder.clearDexterity()
    }
    /**
     * <code>required uint32 dexterity = 5;</code>
     * @return Whether the dexterity field is set.
     */
    public fun hasDexterity(): kotlin.Boolean {
      return _builder.hasDexterity()
    }

    /**
     * <code>required uint32 bonus_points = 6;</code>
     */
    public var bonusPoints: kotlin.Int
      @JvmName("getBonusPoints")
      get() = _builder.getBonusPoints()
      @JvmName("setBonusPoints")
      set(value) {
        _builder.setBonusPoints(value)
      }
    /**
     * <code>required uint32 bonus_points = 6;</code>
     */
    public fun clearBonusPoints() {
      _builder.clearBonusPoints()
    }
    /**
     * <code>required uint32 bonus_points = 6;</code>
     * @return Whether the bonusPoints field is set.
     */
    public fun hasBonusPoints(): kotlin.Boolean {
      return _builder.hasBonusPoints()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SkillsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .portal.Skill skills = 10;</code>
     */
     public val skills: com.google.protobuf.kotlin.DslList<cz.jenda.tabor2022.data.proto.Portal.Skill, SkillsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSkillsList()
      )
    /**
     * <code>repeated .portal.Skill skills = 10;</code>
     * @param value The skills to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSkills")
    public fun com.google.protobuf.kotlin.DslList<cz.jenda.tabor2022.data.proto.Portal.Skill, SkillsProxy>.add(value: cz.jenda.tabor2022.data.proto.Portal.Skill) {
      _builder.addSkills(value)
    }/**
     * <code>repeated .portal.Skill skills = 10;</code>
     * @param value The skills to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSkills")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cz.jenda.tabor2022.data.proto.Portal.Skill, SkillsProxy>.plusAssign(value: cz.jenda.tabor2022.data.proto.Portal.Skill) {
      add(value)
    }/**
     * <code>repeated .portal.Skill skills = 10;</code>
     * @param values The skills to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSkills")
    public fun com.google.protobuf.kotlin.DslList<cz.jenda.tabor2022.data.proto.Portal.Skill, SkillsProxy>.addAll(values: kotlin.collections.Iterable<cz.jenda.tabor2022.data.proto.Portal.Skill>) {
      _builder.addAllSkills(values)
    }/**
     * <code>repeated .portal.Skill skills = 10;</code>
     * @param values The skills to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSkills")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cz.jenda.tabor2022.data.proto.Portal.Skill, SkillsProxy>.plusAssign(values: kotlin.collections.Iterable<cz.jenda.tabor2022.data.proto.Portal.Skill>) {
      addAll(values)
    }/**
     * <code>repeated .portal.Skill skills = 10;</code>
     * @param index The index to set the value at.
     * @param value The skills to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSkills")
    public operator fun com.google.protobuf.kotlin.DslList<cz.jenda.tabor2022.data.proto.Portal.Skill, SkillsProxy>.set(index: kotlin.Int, value: cz.jenda.tabor2022.data.proto.Portal.Skill) {
      _builder.setSkills(index, value)
    }/**
     * <code>repeated .portal.Skill skills = 10;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSkills")
    public fun com.google.protobuf.kotlin.DslList<cz.jenda.tabor2022.data.proto.Portal.Skill, SkillsProxy>.clear() {
      _builder.clearSkills()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun cz.jenda.tabor2022.data.proto.Portal.PlayerData.copy(block: PlayerDataKt.Dsl.() -> kotlin.Unit): cz.jenda.tabor2022.data.proto.Portal.PlayerData =
  cz.jenda.tabor2022.data.proto.PlayerDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

